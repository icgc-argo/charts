{{- if .Values.backup.enabled }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "song.postgres.fullname" . }}
  labels:
    app: {{ include "song.name" . }}
    chart: {{ include "song.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.backup.schedule }}"
  jobTemplate:
    metadata:
      labels:
        app: {{ include "song.name" . }}
        release: {{ .Release.Name }}
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            app: {{ include "song.name" . }}
            release: {{ .Release.Name }}
        spec:
          restartPolicy: Never
          containers:
            - name: postgres-backup-s3
              image: "{{ .Values.backupImage.repository }}:{{ .Values.backupImage.tag }}"
              imagePullPolicy: {{ .Values.backupImage.pullPolicy }}
              env:
                - name: RELEASE_NAME
                  value: {{ .Release.Name }}
                - name: POSTGRES_HOST
                  value: {{ include "song.postgres.fullname" . }}
                - name: ENDPOINT_URL
                  value: {{ .Values.backup.endpointURL }}
                - name: AWS_ACCESS_KEY_ID
                  value: {{ .Values.backup.awsAccessKey }}
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "song.fullname" . }}
                      key: aws-secret-key
              resources:
{{ toYaml .Values.resources | indent 16 }}
    {{- with .Values.nodeSelector }}
          nodeSelector:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.affinity }}
          affinity:
{{ toYaml . | indent 12 }}
    {{- end }}
    {{- with .Values.tolerations }}
          tolerations:
{{ toYaml . | indent 12 }}:
{{- end }}
{{- end }}
