# Default values for argo-gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/icgc-argo/platform-api
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  portName: http

podSecurityContext:
  runAsGroup: 9999
  runAsNonRoot: true
  runAsUser: 9999

# choose rbac roles to enable
rbac:
  create:
    # for vault kubernetes integration
    tokenReview: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

ingress:
  enabled: false
  # className: private
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  annotations: {}
    # cert-manager.io/cluster-issuer: letsencrypt-prod-a
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

# see https://github.com/icgc-argo/platform-api/blob/develop/.env.schema for full env schema
appConfig:
  EGO_ROOT_GRPC: #
  EGO_ROOT_REST: #
  PROGRAM_SERVICE_ROOT: #
  CLINICAL_SERVICE_ROOT: #
  GQL_MAX_COST: 1000
  KAFKA_REST_PROXY_ROOT: #
  EGO_PUBLIC_KEY: #
  SUBMISSION_TEMPLATE_PATH: #

tolerations: []

affinity: {}
