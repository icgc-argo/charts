apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ include "..fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    helm.sh/chart: {{ include "..chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "..name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "..name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: data
              mountPath: /var/lib/sqlite/data
          env:
            # - name: DB_SERVICE
            #   value: {{ include "..fullname" . }}-postgres
            # - name: DB_NAME
            #   value: enrolment
            # - name: DB_USER
            #   value: postgres
            # - name: DB_PASS
            #   value: postgres
            # - name: DB_PORT
            #   value: "5432"
            - name: SQLITE_DIR
              value: "/var/lib/sqlite/data"
            - name: SMTP_URL
              value: "mailhog-staging"
            - name: RESOURCE_ADMIN_EMAIL
              value: "test@enrolment.staging.cancercollaboratory.org"
            - name: SMTP_FROM
              value: "no-reply@enrolment.staging.cancercollaboratory.org"
            - name: SITE_URL
              value: {{ .Values.ingress.host }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        - name: ui
          image: "{{ .Values.uiImage.repository }}:{{ .Values.uiImage.tag }}"
          ports:
            - name: http-ui
              containerPort: 80
              protocol: TCP
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
    - metadata:
       name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.volumeSize | quote }}
