apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "score.fullname" . }}
  labels:
    app: {{ include "score.name" . }}
    chart: {{ include "score.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "score.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "score.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - env:
        - name: AUTH_SERVER_CLIENTID
          value: {{ .Values.appConfig.authServer.clientID }}
        - name: AUTH_SERVER_CLIENTSECRET
          value: {{ .Values.appConfig.authServer.clientSecret }}
        - name: AUTH_SERVER_URL
          value: {{ .Values.appConfig.authServer.URL }}
        - name: AUTH_SERVER_UPLOADSCOPE
          value: {{ .Values.appConfig.authServer.downloadScope }}
        - name: AUTH_SERVER_DOWNLOADSCOPE
          value: {{ .Values.appConfig.authServer.uploadScope }}
        - name: OBJECT_STORAGE_ACCESS_KEY
          value: {{ .Values.appConfig.objectStorage.accessKey }}
        - name: OBJECT_STORAGE_SECRET_KEY
          value: {{ .Values.appConfig.objectStorage.secretKey }}
        - name: OBJECT_STORAGE_URL
          value: {{ .Values.appConfig.objectStorage.URL }}
        - name: SERVER_URL
          value: {{ .Values.appConfig.song.serverUrl }}
        - name: STORAGE_SERVER_DATA_BUCKET
          value: {{ .Values.appConfig.storageServer.dataBucket }}
        - name: STORAGE_SERVER_DATA_DIR
          value: {{ .Values.appConfig.storageServer.dataDir }}
        - name: STORAGE_SERVER_JMX_PORT
          value: {{ quote .Values.appConfig.storageServer.JMXPort }}
        - name: STORAGE_SERVER_OBJECT_SENTINEL
          value: {{ .Values.appConfig.storageServer.sentinel }}
        - name: STORAGE_SERVER_PORT
          value: {{ quote .Values.appConfig.storageServer.port }}
        - name: STORAGE_SERVER_STATE_BUCKET
          value: {{ .Values.appConfig.storageServer.stateBucket }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: score-server
        resources: {}
      restartPolicy: Always
status: {}
