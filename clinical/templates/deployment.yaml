apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "clinical.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "clinical.name" . }}
    helm.sh/chart: {{ include "clinical.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "clinical.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "clinical.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "clinical.fullname" . }}
      initContainers:
        - name: copy-certs
          image: "{{ .Values.copyCertsImage.repository }}:{{ .Values.copyCertsImage.tag }}"
          imagePullPolicy: {{ .Values.copyCertsImage.pullPolicy | quote }}
          command:
            - "sh"
          args:
            - "-c"
            - |
              set -e
              set -x
            {{- if .Values.mongoTLS.enabled }}
              cp /mongodb-ca/tls.key /mongo-certs/tls.key
              cp /mongodb-ca/tls.crt /mongo-certs/tls.crt
              cp /cert-config/start.sh /mongo-certs/start.sh
              chmod 755 /mongo-certs/start.sh
              sh /mongo-certs/start.sh
            {{- end }}
          volumeMounts:
          {{- if .Values.mongoTLS.enabled }}
            - name: mongodb-ca
              mountPath: /mongodb-ca 
            - name: mongodb-certs
              mountPath: /mongo-certs
            - name: cert-config
              mountPath: /cert-config
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: PORT
            value: {{ .Values.appConfig.port | quote }}
{{- if .Values.extraEnv }}        
  {{ range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: {{ $value | quote }}
  {{- end }}
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.appConfig.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: mongodb-certs
              mountPath: /mongodb-certs

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: mongodb-ca
          secret:
            defaultMode: 0400
            secretName: mongodb-replica-test-mongodb-replicaset-ca
        - name: mongodb-certs
          emptyDir: {}
        - name: cert-config
          configMap:
            name: {{ template "clinical.fullname" . }}-mongodb-config
